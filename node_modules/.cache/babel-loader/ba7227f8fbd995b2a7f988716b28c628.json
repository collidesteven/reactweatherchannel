{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\myweatherchannel\\\\src\\\\App.js\";\nimport React from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nconst API_KEY = \"fd338db8e32594fb785aa910fb36923f\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: '',\n      city: '',\n      country: '',\n      humidity: '',\n      description: '',\n      error: ''\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n        console.log(data);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["F:\\react\\myweatherchannel\\src\\App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","state","temperature","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","main","temp","name","sys","weather","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAC,kCAAd;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAE3B;AACJC,MAAAA,WAAW,EAAC,EADR;AAEJC,MAAAA,IAAI,EAAC,EAFD;AAGJC,MAAAA,OAAO,EAAC,EAHJ;AAIJC,MAAAA,QAAQ,EAAC,EAJL;AAKJC,MAAAA,WAAW,EAAC,EALR;AAMJC,MAAAA,KAAK,EAAC;AANF,KAF2B;;AAAA,SAW/BC,UAX+B,GAWlB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDZ,IAArD,cAA6DC,OAA7D,oBAA8EN,OAA9E,mBAA5B;AACE,YAAMkB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEF,UAAGd,IAAI,IAAIC,OAAX,EAAmB;AACjB,aAAKc,QAAL,CAAc;AACZhB,UAAAA,WAAW,EAACc,IAAI,CAACG,IAAL,CAAUC,IADV;AAEZjB,UAAAA,IAAI,EAACa,IAAI,CAACK,IAFE;AAGZjB,UAAAA,OAAO,EAAEY,IAAI,CAACM,GAAL,CAASlB,OAHN;AAIZC,UAAAA,QAAQ,EAAEW,IAAI,CAACG,IAAL,CAAUd,QAJR;AAKZC,UAAAA,WAAW,EAAEU,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBjB,WALjB;AAMZC,UAAAA,KAAK,EAAC;AANM,SAAd;AAQAiB,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD;AACF,KA7B8B;AAAA;;AA+B/BU,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKlB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AACA,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,WADxB;AAEA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IAFjB;AAGA,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHpB;AAIA,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAJrB;AAKA,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,WALxB;AAMA,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcD;;AA9C8B;;AAiDjC,eAAeR,GAAf","sourcesContent":["import React from 'react';\r\nimport Titles from './components/Titles';\r\nimport Form from './components/Form';\r\nimport Weather from './components/Weather';\r\n\r\nconst API_KEY=\"fd338db8e32594fb785aa910fb36923f\";\r\n\r\n\r\nclass App extends React.Component{\r\n\r\nstate={\r\n  temperature:'',\r\n  city:'',\r\n  country:'',\r\n  humidity:'',\r\n  description:'',\r\n  error:''\r\n}\r\n\r\n  getWeather = async (e) => {\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\r\n      const data = await api_call.json();\r\n\r\n    if(city && country){\r\n      this.setState({\r\n        temperature:data.main.temp,\r\n        city:data.name,\r\n        country: data.sys.country,\r\n        humidity: data.main.humidity,\r\n        description: data.weather[0].description,\r\n        error:\"\"\r\n      });\r\n      console.log(data);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Titles/>\r\n        <Form getWeather={this.getWeather}/>\r\n        <Weather\r\n        temperature={this.state.temperature}\r\n        city={this.state.city}\r\n        country={this.state.country}\r\n        humidity={this.state.humidity}\r\n        description={this.state.description}\r\n        error={this.state.error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}